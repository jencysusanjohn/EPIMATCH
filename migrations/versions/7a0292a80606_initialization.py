"""initialization

Revision ID: 7a0292a80606
Revises: 
Create Date: 2020-06-30 15:58:20.899819

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7a0292a80606'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('linkedin_company',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('url', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_linkedin_company_created_at'), 'linkedin_company', ['created_at'], unique=False)
    op.create_index(op.f('ix_linkedin_company_id'), 'linkedin_company', ['id'], unique=False)
    op.create_index(op.f('ix_linkedin_company_name'), 'linkedin_company', ['name'], unique=False)
    op.create_index(op.f('ix_linkedin_company_updated_at'), 'linkedin_company', ['updated_at'], unique=False)
    op.create_table('linkedin_education',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('school', sa.String(length=150), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_linkedin_education_created_at'), 'linkedin_education', ['created_at'], unique=False)
    op.create_index(op.f('ix_linkedin_education_id'), 'linkedin_education', ['id'], unique=False)
    op.create_index(op.f('ix_linkedin_education_school'), 'linkedin_education', ['school'], unique=False)
    op.create_index(op.f('ix_linkedin_education_updated_at'), 'linkedin_education', ['updated_at'], unique=False)
    op.create_table('search_result_person',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=105), nullable=False),
    sa.Column('scraped', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_search_result_person_created_at'), 'search_result_person', ['created_at'], unique=False)
    op.create_index(op.f('ix_search_result_person_id'), 'search_result_person', ['id'], unique=False)
    op.create_index(op.f('ix_search_result_person_updated_at'), 'search_result_person', ['updated_at'], unique=False)
    op.create_index(op.f('ix_search_result_person_url'), 'search_result_person', ['url'], unique=False)
    op.create_table('user_friendship',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_user_friendship_created_at'), 'user_friendship', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_friendship_id'), 'user_friendship', ['id'], unique=False)
    op.create_index(op.f('ix_user_friendship_updated_at'), 'user_friendship', ['updated_at'], unique=False)
    op.create_table('user_interest',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_user_interest_created_at'), 'user_interest', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_interest_id'), 'user_interest', ['id'], unique=False)
    op.create_index(op.f('ix_user_interest_name'), 'user_interest', ['name'], unique=False)
    op.create_index(op.f('ix_user_interest_updated_at'), 'user_interest', ['updated_at'], unique=False)
    op.create_table('user_skill',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_user_skill_created_at'), 'user_skill', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_skill_id'), 'user_skill', ['id'], unique=False)
    op.create_index(op.f('ix_user_skill_name'), 'user_skill', ['name'], unique=False)
    op.create_index(op.f('ix_user_skill_updated_at'), 'user_skill', ['updated_at'], unique=False)
    op.create_table('user_table',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=60), nullable=False),
    sa.Column('url', sa.String(length=256), nullable=False),
    sa.Column('image', sa.String(length=300), nullable=False),
    sa.Column('email', sa.String(length=80), nullable=True),
    sa.Column('phone', sa.String(length=25), nullable=True),
    sa.Column('location', sa.String(length=120), nullable=True),
    sa.Column('connections', sa.Integer(), nullable=True),
    sa.Column('school', sa.String(length=120), nullable=True),
    sa.Column('headline', sa.String(length=164), nullable=False),
    sa.Column('signedup', sa.Boolean(), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_user_table_created_at'), 'user_table', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_table_id'), 'user_table', ['id'], unique=False)
    op.create_index(op.f('ix_user_table_name'), 'user_table', ['name'], unique=False)
    op.create_index(op.f('ix_user_table_updated_at'), 'user_table', ['updated_at'], unique=False)
    op.create_index(op.f('ix_user_table_url'), 'user_table', ['url'], unique=False)
    op.create_table('search_result_person_association',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('search_result_person_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['search_result_person_id'], ['search_result_person.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id', 'search_result_person_id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_search_result_person_association_created_at'), 'search_result_person_association', ['created_at'], unique=False)
    op.create_index(op.f('ix_search_result_person_association_id'), 'search_result_person_association', ['id'], unique=False)
    op.create_index(op.f('ix_search_result_person_association_updated_at'), 'search_result_person_association', ['updated_at'], unique=False)
    op.create_table('user_certification',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('authority', sa.String(length=255), nullable=False),
    sa.Column('date_range', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_user_certification_created_at'), 'user_certification', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_certification_id'), 'user_certification', ['id'], unique=False)
    op.create_index(op.f('ix_user_certification_updated_at'), 'user_certification', ['updated_at'], unique=False)
    op.create_table('user_course',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_user_course_created_at'), 'user_course', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_course_id'), 'user_course', ['id'], unique=False)
    op.create_index(op.f('ix_user_course_updated_at'), 'user_course', ['updated_at'], unique=False)
    op.create_table('user_education_association',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('education_id', sa.Integer(), nullable=False),
    sa.Column('degree', sa.String(length=100), nullable=True),
    sa.Column('field_of_study', sa.String(length=100), nullable=True),
    sa.Column('date_range', sa.String(length=20), nullable=True),
    sa.Column('grades', sa.String(length=80), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['education_id'], ['linkedin_education.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id', 'education_id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_user_education_association_created_at'), 'user_education_association', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_education_association_id'), 'user_education_association', ['id'], unique=False)
    op.create_index(op.f('ix_user_education_association_updated_at'), 'user_education_association', ['updated_at'], unique=False)
    op.create_table('user_event',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('venue', sa.String(length=120), nullable=False),
    sa.Column('location', sa.String(length=120), nullable=False),
    sa.Column('description', sa.String(length=280), nullable=False),
    sa.Column('starts_at', sa.DateTime(), nullable=False),
    sa.Column('ends_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_user_event_created_at'), 'user_event', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_event_ends_at'), 'user_event', ['ends_at'], unique=False)
    op.create_index(op.f('ix_user_event_id'), 'user_event', ['id'], unique=False)
    op.create_index(op.f('ix_user_event_starts_at'), 'user_event', ['starts_at'], unique=False)
    op.create_index(op.f('ix_user_event_updated_at'), 'user_event', ['updated_at'], unique=False)
    op.create_table('user_friendship_request',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('to_user_id', sa.Integer(), nullable=False),
    sa.Column('from_user_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=10), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['from_user_id'], ['user_table.id'], ),
    sa.ForeignKeyConstraint(['to_user_id'], ['user_table.id'], ),
    sa.PrimaryKeyConstraint('id', 'to_user_id', 'from_user_id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_user_friendship_request_created_at'), 'user_friendship_request', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_friendship_request_id'), 'user_friendship_request', ['id'], unique=False)
    op.create_index(op.f('ix_user_friendship_request_updated_at'), 'user_friendship_request', ['updated_at'], unique=False)
    op.create_table('user_honor',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_user_honor_created_at'), 'user_honor', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_honor_id'), 'user_honor', ['id'], unique=False)
    op.create_index(op.f('ix_user_honor_updated_at'), 'user_honor', ['updated_at'], unique=False)
    op.create_table('user_interest_association',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('interest_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['interest_id'], ['user_interest.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id', 'interest_id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_user_interest_association_created_at'), 'user_interest_association', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_interest_association_id'), 'user_interest_association', ['id'], unique=False)
    op.create_index(op.f('ix_user_interest_association_updated_at'), 'user_interest_association', ['updated_at'], unique=False)
    op.create_table('user_job',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('date_range', sa.String(length=25), nullable=False),
    sa.Column('location', sa.String(length=80), nullable=True),
    sa.Column('current', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['linkedin_company.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id', 'company_id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_user_job_created_at'), 'user_job', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_job_id'), 'user_job', ['id'], unique=False)
    op.create_index(op.f('ix_user_job_updated_at'), 'user_job', ['updated_at'], unique=False)
    op.create_table('user_job_offer',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('venue', sa.String(length=120), nullable=False),
    sa.Column('location', sa.String(length=120), nullable=False),
    sa.Column('description', sa.String(length=280), nullable=False),
    sa.Column('contact', sa.String(length=80), nullable=False),
    sa.Column('starts_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_user_job_offer_created_at'), 'user_job_offer', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_job_offer_id'), 'user_job_offer', ['id'], unique=False)
    op.create_index(op.f('ix_user_job_offer_starts_at'), 'user_job_offer', ['starts_at'], unique=False)
    op.create_index(op.f('ix_user_job_offer_updated_at'), 'user_job_offer', ['updated_at'], unique=False)
    op.create_table('user_language',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('language', sa.String(length=80), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_user_language_created_at'), 'user_language', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_language_id'), 'user_language', ['id'], unique=False)
    op.create_index(op.f('ix_user_language_language'), 'user_language', ['language'], unique=False)
    op.create_index(op.f('ix_user_language_updated_at'), 'user_language', ['updated_at'], unique=False)
    op.create_table('user_match',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('friendship_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['friendship_id'], ['user_friendship.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id', 'friendship_id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_user_match_created_at'), 'user_match', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_match_id'), 'user_match', ['id'], unique=False)
    op.create_index(op.f('ix_user_match_updated_at'), 'user_match', ['updated_at'], unique=False)
    op.create_table('user_organization',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_user_organization_created_at'), 'user_organization', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_organization_id'), 'user_organization', ['id'], unique=False)
    op.create_index(op.f('ix_user_organization_updated_at'), 'user_organization', ['updated_at'], unique=False)
    op.create_table('user_patent',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_user_patent_created_at'), 'user_patent', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_patent_id'), 'user_patent', ['id'], unique=False)
    op.create_index(op.f('ix_user_patent_updated_at'), 'user_patent', ['updated_at'], unique=False)
    op.create_table('user_post',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('body', sa.String(length=280), nullable=False),
    sa.Column('image', sa.String(length=300), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_user_post_created_at'), 'user_post', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_post_id'), 'user_post', ['id'], unique=False)
    op.create_index(op.f('ix_user_post_updated_at'), 'user_post', ['updated_at'], unique=False)
    op.create_table('user_project',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_user_project_created_at'), 'user_project', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_project_id'), 'user_project', ['id'], unique=False)
    op.create_index(op.f('ix_user_project_updated_at'), 'user_project', ['updated_at'], unique=False)
    op.create_table('user_publication',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_user_publication_created_at'), 'user_publication', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_publication_id'), 'user_publication', ['id'], unique=False)
    op.create_index(op.f('ix_user_publication_updated_at'), 'user_publication', ['updated_at'], unique=False)
    op.create_table('user_recommendation',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('recommended_for_id', sa.Integer(), nullable=False),
    sa.Column('recommended_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['recommended_for_id'], ['user_table.id'], ),
    sa.ForeignKeyConstraint(['recommended_id'], ['user_table.id'], ),
    sa.PrimaryKeyConstraint('id', 'recommended_for_id', 'recommended_id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_user_recommendation_created_at'), 'user_recommendation', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_recommendation_id'), 'user_recommendation', ['id'], unique=False)
    op.create_index(op.f('ix_user_recommendation_updated_at'), 'user_recommendation', ['updated_at'], unique=False)
    op.create_table('user_skill_association',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.Column('endorsements', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['skill_id'], ['user_skill.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id', 'skill_id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_user_skill_association_created_at'), 'user_skill_association', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_skill_association_id'), 'user_skill_association', ['id'], unique=False)
    op.create_index(op.f('ix_user_skill_association_updated_at'), 'user_skill_association', ['updated_at'], unique=False)
    op.create_table('user_text_score',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('score', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_user_text_score_created_at'), 'user_text_score', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_text_score_id'), 'user_text_score', ['id'], unique=False)
    op.create_index(op.f('ix_user_text_score_updated_at'), 'user_text_score', ['updated_at'], unique=False)
    op.create_table('user_volunteer',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('organization', sa.String(length=100), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('date_range', sa.String(length=25), nullable=True),
    sa.Column('cause', sa.String(length=50), nullable=True),
    sa.Column('location', sa.String(length=80), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_user_volunteer_created_at'), 'user_volunteer', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_volunteer_id'), 'user_volunteer', ['id'], unique=False)
    op.create_index(op.f('ix_user_volunteer_updated_at'), 'user_volunteer', ['updated_at'], unique=False)
    op.create_table('user_website',
    sa.Column('public_id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ),
    sa.PrimaryKeyConstraint('id', 'user_id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_user_website_created_at'), 'user_website', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_website_id'), 'user_website', ['id'], unique=False)
    op.create_index(op.f('ix_user_website_updated_at'), 'user_website', ['updated_at'], unique=False)
    op.create_index(op.f('ix_user_website_url'), 'user_website', ['url'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_website_url'), table_name='user_website')
    op.drop_index(op.f('ix_user_website_updated_at'), table_name='user_website')
    op.drop_index(op.f('ix_user_website_id'), table_name='user_website')
    op.drop_index(op.f('ix_user_website_created_at'), table_name='user_website')
    op.drop_table('user_website')
    op.drop_index(op.f('ix_user_volunteer_updated_at'), table_name='user_volunteer')
    op.drop_index(op.f('ix_user_volunteer_id'), table_name='user_volunteer')
    op.drop_index(op.f('ix_user_volunteer_created_at'), table_name='user_volunteer')
    op.drop_table('user_volunteer')
    op.drop_index(op.f('ix_user_text_score_updated_at'), table_name='user_text_score')
    op.drop_index(op.f('ix_user_text_score_id'), table_name='user_text_score')
    op.drop_index(op.f('ix_user_text_score_created_at'), table_name='user_text_score')
    op.drop_table('user_text_score')
    op.drop_index(op.f('ix_user_skill_association_updated_at'), table_name='user_skill_association')
    op.drop_index(op.f('ix_user_skill_association_id'), table_name='user_skill_association')
    op.drop_index(op.f('ix_user_skill_association_created_at'), table_name='user_skill_association')
    op.drop_table('user_skill_association')
    op.drop_index(op.f('ix_user_recommendation_updated_at'), table_name='user_recommendation')
    op.drop_index(op.f('ix_user_recommendation_id'), table_name='user_recommendation')
    op.drop_index(op.f('ix_user_recommendation_created_at'), table_name='user_recommendation')
    op.drop_table('user_recommendation')
    op.drop_index(op.f('ix_user_publication_updated_at'), table_name='user_publication')
    op.drop_index(op.f('ix_user_publication_id'), table_name='user_publication')
    op.drop_index(op.f('ix_user_publication_created_at'), table_name='user_publication')
    op.drop_table('user_publication')
    op.drop_index(op.f('ix_user_project_updated_at'), table_name='user_project')
    op.drop_index(op.f('ix_user_project_id'), table_name='user_project')
    op.drop_index(op.f('ix_user_project_created_at'), table_name='user_project')
    op.drop_table('user_project')
    op.drop_index(op.f('ix_user_post_updated_at'), table_name='user_post')
    op.drop_index(op.f('ix_user_post_id'), table_name='user_post')
    op.drop_index(op.f('ix_user_post_created_at'), table_name='user_post')
    op.drop_table('user_post')
    op.drop_index(op.f('ix_user_patent_updated_at'), table_name='user_patent')
    op.drop_index(op.f('ix_user_patent_id'), table_name='user_patent')
    op.drop_index(op.f('ix_user_patent_created_at'), table_name='user_patent')
    op.drop_table('user_patent')
    op.drop_index(op.f('ix_user_organization_updated_at'), table_name='user_organization')
    op.drop_index(op.f('ix_user_organization_id'), table_name='user_organization')
    op.drop_index(op.f('ix_user_organization_created_at'), table_name='user_organization')
    op.drop_table('user_organization')
    op.drop_index(op.f('ix_user_match_updated_at'), table_name='user_match')
    op.drop_index(op.f('ix_user_match_id'), table_name='user_match')
    op.drop_index(op.f('ix_user_match_created_at'), table_name='user_match')
    op.drop_table('user_match')
    op.drop_index(op.f('ix_user_language_updated_at'), table_name='user_language')
    op.drop_index(op.f('ix_user_language_language'), table_name='user_language')
    op.drop_index(op.f('ix_user_language_id'), table_name='user_language')
    op.drop_index(op.f('ix_user_language_created_at'), table_name='user_language')
    op.drop_table('user_language')
    op.drop_index(op.f('ix_user_job_offer_updated_at'), table_name='user_job_offer')
    op.drop_index(op.f('ix_user_job_offer_starts_at'), table_name='user_job_offer')
    op.drop_index(op.f('ix_user_job_offer_id'), table_name='user_job_offer')
    op.drop_index(op.f('ix_user_job_offer_created_at'), table_name='user_job_offer')
    op.drop_table('user_job_offer')
    op.drop_index(op.f('ix_user_job_updated_at'), table_name='user_job')
    op.drop_index(op.f('ix_user_job_id'), table_name='user_job')
    op.drop_index(op.f('ix_user_job_created_at'), table_name='user_job')
    op.drop_table('user_job')
    op.drop_index(op.f('ix_user_interest_association_updated_at'), table_name='user_interest_association')
    op.drop_index(op.f('ix_user_interest_association_id'), table_name='user_interest_association')
    op.drop_index(op.f('ix_user_interest_association_created_at'), table_name='user_interest_association')
    op.drop_table('user_interest_association')
    op.drop_index(op.f('ix_user_honor_updated_at'), table_name='user_honor')
    op.drop_index(op.f('ix_user_honor_id'), table_name='user_honor')
    op.drop_index(op.f('ix_user_honor_created_at'), table_name='user_honor')
    op.drop_table('user_honor')
    op.drop_index(op.f('ix_user_friendship_request_updated_at'), table_name='user_friendship_request')
    op.drop_index(op.f('ix_user_friendship_request_id'), table_name='user_friendship_request')
    op.drop_index(op.f('ix_user_friendship_request_created_at'), table_name='user_friendship_request')
    op.drop_table('user_friendship_request')
    op.drop_index(op.f('ix_user_event_updated_at'), table_name='user_event')
    op.drop_index(op.f('ix_user_event_starts_at'), table_name='user_event')
    op.drop_index(op.f('ix_user_event_id'), table_name='user_event')
    op.drop_index(op.f('ix_user_event_ends_at'), table_name='user_event')
    op.drop_index(op.f('ix_user_event_created_at'), table_name='user_event')
    op.drop_table('user_event')
    op.drop_index(op.f('ix_user_education_association_updated_at'), table_name='user_education_association')
    op.drop_index(op.f('ix_user_education_association_id'), table_name='user_education_association')
    op.drop_index(op.f('ix_user_education_association_created_at'), table_name='user_education_association')
    op.drop_table('user_education_association')
    op.drop_index(op.f('ix_user_course_updated_at'), table_name='user_course')
    op.drop_index(op.f('ix_user_course_id'), table_name='user_course')
    op.drop_index(op.f('ix_user_course_created_at'), table_name='user_course')
    op.drop_table('user_course')
    op.drop_index(op.f('ix_user_certification_updated_at'), table_name='user_certification')
    op.drop_index(op.f('ix_user_certification_id'), table_name='user_certification')
    op.drop_index(op.f('ix_user_certification_created_at'), table_name='user_certification')
    op.drop_table('user_certification')
    op.drop_index(op.f('ix_search_result_person_association_updated_at'), table_name='search_result_person_association')
    op.drop_index(op.f('ix_search_result_person_association_id'), table_name='search_result_person_association')
    op.drop_index(op.f('ix_search_result_person_association_created_at'), table_name='search_result_person_association')
    op.drop_table('search_result_person_association')
    op.drop_index(op.f('ix_user_table_url'), table_name='user_table')
    op.drop_index(op.f('ix_user_table_updated_at'), table_name='user_table')
    op.drop_index(op.f('ix_user_table_name'), table_name='user_table')
    op.drop_index(op.f('ix_user_table_id'), table_name='user_table')
    op.drop_index(op.f('ix_user_table_created_at'), table_name='user_table')
    op.drop_table('user_table')
    op.drop_index(op.f('ix_user_skill_updated_at'), table_name='user_skill')
    op.drop_index(op.f('ix_user_skill_name'), table_name='user_skill')
    op.drop_index(op.f('ix_user_skill_id'), table_name='user_skill')
    op.drop_index(op.f('ix_user_skill_created_at'), table_name='user_skill')
    op.drop_table('user_skill')
    op.drop_index(op.f('ix_user_interest_updated_at'), table_name='user_interest')
    op.drop_index(op.f('ix_user_interest_name'), table_name='user_interest')
    op.drop_index(op.f('ix_user_interest_id'), table_name='user_interest')
    op.drop_index(op.f('ix_user_interest_created_at'), table_name='user_interest')
    op.drop_table('user_interest')
    op.drop_index(op.f('ix_user_friendship_updated_at'), table_name='user_friendship')
    op.drop_index(op.f('ix_user_friendship_id'), table_name='user_friendship')
    op.drop_index(op.f('ix_user_friendship_created_at'), table_name='user_friendship')
    op.drop_table('user_friendship')
    op.drop_index(op.f('ix_search_result_person_url'), table_name='search_result_person')
    op.drop_index(op.f('ix_search_result_person_updated_at'), table_name='search_result_person')
    op.drop_index(op.f('ix_search_result_person_id'), table_name='search_result_person')
    op.drop_index(op.f('ix_search_result_person_created_at'), table_name='search_result_person')
    op.drop_table('search_result_person')
    op.drop_index(op.f('ix_linkedin_education_updated_at'), table_name='linkedin_education')
    op.drop_index(op.f('ix_linkedin_education_school'), table_name='linkedin_education')
    op.drop_index(op.f('ix_linkedin_education_id'), table_name='linkedin_education')
    op.drop_index(op.f('ix_linkedin_education_created_at'), table_name='linkedin_education')
    op.drop_table('linkedin_education')
    op.drop_index(op.f('ix_linkedin_company_updated_at'), table_name='linkedin_company')
    op.drop_index(op.f('ix_linkedin_company_name'), table_name='linkedin_company')
    op.drop_index(op.f('ix_linkedin_company_id'), table_name='linkedin_company')
    op.drop_index(op.f('ix_linkedin_company_created_at'), table_name='linkedin_company')
    op.drop_table('linkedin_company')
    # ### end Alembic commands ###
